<?xml version="1.0" encoding="UTF-8"?>
<project name="xad-framework" default="release">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="project.base.dir" value="."/>
    <property name="lib.dir" value="${project.base.dir}/lib"/>

    <!-- Module xad-framework -->

    <dirname property="module.xad-framework.basedir" file="${ant.file}"/>
    <property name="compiler.args.xad-framework" value="${compiler.args}"/>

    <property name="xad-framework.output.dir" value="${module.xad-framework.basedir}/target/classes"/>
    <property name="xad-framework.testoutput.dir" value="${module.xad-framework.basedir}/target/test-classes"/>

    <property name="instrumented.dir" value="${module.xad-framework.basedir}/target/instrumented-classes"/>

    <property name="reports.xml.dir" value="${module.xad-framework.basedir}/target/reports/junit"/>
    <property name="reports.junit.dir" value="${module.xad-framework.basedir}/target/reports/junit"/>
    <property name="coveragereport.dir" value="${module.xad-framework.basedir}/target/reports/codecoverage"/>

    <path id="xad-framework.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="xad-framework.classpath">
        <pathelement location="${lib.dir}/ehcache-core-2.4.1.jar"/>
        <pathelement location="${lib.dir}/slf4j-api-1.6.1.jar"/>
        <pathelement location="${lib.dir}/xmemcached-1.3.1.jar"/>
        <pathelement location="${lib.dir}/memcached-2.6rc1.jar"/>
        <pathelement location="${lib.dir}/junit-4.8.2.jar"/>
        <pathelement location="${lib.dir}/mockito-all-1.8.5.jar"/>
        <pathelement location="${lib.dir}/vesearch.jar"/>
        <pathelement location="${lib.dir}/hazelcast-all-1.9.3.jar"/>
        <pathelement location="${lib.dir}/xad-config.jar"/>
        <pathelement location="${lib.dir}/xbean.jar"/>
    </path>

    <path id="xmlbean.class.path">
        <pathelement location="${lib.dir}/optional/xbean.jar"/>
    </path>

    <patternset id="excluded.from.module.xad-framework">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.xad-framework">
        <patternset refid="excluded.from.module.xad-framework"/>
    </patternset>

    <path id="xad-framework.module.sourcepath">
        <dirset dir="${module.xad-framework.basedir}">
            <include name="src/main/java"/>
        </dirset>
    </path>

    <path id="xad-framework.module.test.sourcepath">
        <dirset dir="${module.xad-framework.basedir}">
            <include name="src/test/java"/>
        </dirset>
    </path>

    <!-- Cobertura Settings -->

    <property name="cobertura.dir" value="${lib.dir}/optional" />

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="*.jar" />
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <target name="cobertura" depends="compile.module.xad-framework">
        <assertions>
            <enable />
        </assertions>

        <delete file="${basedir}/cobertura.ser" />

        <mkdir dir="${reports.xml.dir}"/>

            <cobertura-instrument todir="${instrumented.dir}"  >
                <ignore regex="org.apache.log4j.*" />
                <fileset dir="${xad-framework.output.dir}">
                    <include name="**/*.class" />
                    <exclude name="**/*Test.class" />
                </fileset>
            </cobertura-instrument>


            <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
                <assertions>
                    <enable />
                </assertions>
                <sysproperty key="net.sourceforge.cobertura.datafile"
                    file="${basedir}/cobertura.ser" />

                <classpath location="${instrumented.dir}" />
                <classpath location="${xad-framework.output.dir}" />
                <classpath location="${xad-framework.testoutput.dir}" />
                <classpath refid="cobertura.classpath" />
                <classpath refid="xad-framework.classpath" />

                <formatter type="xml" />
                <!--test name="${testcase}" todir="${reports.xml.dir}" if="testcase" /-->
                <batchtest todir="${reports.xml.dir}" unless="testcase">
                    <fileset dir="${module.xad-framework.basedir}/src/test/java">
                        <include name="**/*Test.java" />
                        <exclude name="**/*IntegrationTest.java" />
                    </fileset>
                </batchtest>
            </junit>

        <junitreport todir="${reports.junit.dir}">
            <fileset dir="${reports.xml.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.junit.dir}/html"/>
        </junitreport>

        <cobertura-report format="html" destdir="${coveragereport.dir}" >
            <fileset dir="${module.xad-framework.basedir}/src/main/java">
                <include name="**/*.java" />
                <exclude name="**/*Stub.java" />
            </fileset>
        </cobertura-report>

    </target>


    <target name="compile.module.xad-framework"
            depends="compile.module.xad-framework.production,compile.module.xad-framework.tests"
            description="Compile module xad-framework"/>

    <target name="compile.module.xad-framework.production"
            description="Compile module xad-framework; production classes">
        <mkdir dir="${xad-framework.output.dir}"/>
        <javac destdir="${xad-framework.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true"  includeantruntime="false">
            <compilerarg line="${compiler.args.xad-framework}"/>
            <bootclasspath refid="xad-framework.module.bootclasspath"/>
            <classpath refid="xad-framework.classpath"/>
            <src refid="xad-framework.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.xad-framework"/>
        </javac>

        <copy todir="${xad-framework.output.dir}">
            <fileset dir="${module.xad-framework.basedir}/src/main/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.xad-framework.tests" depends="compile.module.xad-framework.production"
            description="compile module xad-framework; test classes" unless="skip.tests">
        <mkdir dir="${xad-framework.testoutput.dir}"/>
        <javac destdir="${xad-framework.testoutput.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true"
                includeantruntime="false" >
            <compilerarg line="${compiler.args.xad-framework}"/>
            <bootclasspath refid="xad-framework.module.bootclasspath"/>
            <classpath refid="xad-framework.classpath"/>
            <classpath location="${xad-framework.output.dir}" />
            <src refid="xad-framework.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.xad-framework"/>
        </javac>

        <copy todir="${xad-framework.testoutput.dir}">
            <fileset dir="${module.xad-framework.basedir}/src/test/java">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.xad-framework" description="cleanup module">
        <delete dir="${module.xad-framework.basedir}/target"/>
        <!--delete dir="${xad-framework.testoutput.dir}"/-->

    </target>

    <target name="release" depends="all">
        <jar basedir="${xad-framework.output.dir}" jarfile="xad-framework-${version}.jar" />
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.xad-framework" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.xad-framework" description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>
</project>
